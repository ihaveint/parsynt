# 1 "src/rosetteInterface/lexer.mll"
 
open Parser
exception LexError of string
open Conf



let keywords =
    [
     "lambda", LAMBDA;
     "let", LET;
     "if", IF;
     "define", DEFINE;
     "list", LIST;
     "cons", CONS;
     "car", CAR;
     "cdr", CDR;
     "nil", NIL;
     "null", NULL;
     "load", LOAD;
     "letrec", LETREC;
     "definerec", DEFINEREC;
     "delay", DELAY;
     "force", FORCE;
    ]

let keyword_tbl = Hashtbl.create 256
let uncurry f (a, b) = f a b
let _ = List.iter (uncurry (Hashtbl.replace keyword_tbl)) keywords

# 33 "src/rosetteInterface/lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base = 
   "\000\000\230\255\231\255\232\255\233\255\079\000\101\000\021\000\
    \002\000\003\000\030\000\243\255\001\000\001\000\246\255\247\255\
    \248\255\249\255\111\000\251\255\252\255\253\255\254\255\160\000\
    \247\000\133\000\078\001\153\001\163\001\245\255\244\255\242\255\
    \240\255\238\255\236\255\237\255\178\001\251\000\250\255\251\255\
    \108\000\252\255\253\255\254\255\255\255\083\000\253\255\254\255\
    \255\255";
  Lexing.lex_backtrk = 
   "\021\000\255\255\255\255\255\255\255\255\021\000\020\000\025\000\
    \016\000\014\000\025\000\255\255\025\000\025\000\255\255\255\255\
    \255\255\255\255\005\000\255\255\255\255\255\255\255\255\000\000\
    \000\000\255\255\000\000\021\000\020\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \005\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255";
  Lexing.lex_default = 
   "\001\000\000\000\000\000\000\000\000\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\000\000\255\255\255\255\000\000\000\000\
    \000\000\000\000\255\255\000\000\000\000\000\000\000\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\255\255\038\000\000\000\000\000\
    \255\255\000\000\000\000\000\000\000\000\046\000\000\000\000\000\
    \000\000";
  Lexing.lex_trans = 
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\004\000\004\000\000\000\000\000\004\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \004\000\010\000\019\000\007\000\023\000\015\000\013\000\029\000\
    \022\000\021\000\017\000\020\000\000\000\018\000\005\000\016\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\000\000\003\000\009\000\011\000\008\000\033\000\
    \032\000\023\000\023\000\023\000\023\000\024\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\031\000\000\000\048\000\000\000\023\000\
    \048\000\023\000\023\000\023\000\023\000\024\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\034\000\012\000\030\000\014\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\035\000\000\000\000\000\000\000\000\000\043\000\000\000\
    \000\000\000\000\000\000\005\000\036\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\000\000\036\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\036\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\000\000\
    \000\000\000\000\000\000\000\000\023\000\000\000\000\000\023\000\
    \044\000\000\000\036\000\000\000\000\000\023\000\023\000\000\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\042\000\000\000\000\000\000\000\000\000\000\000\
    \041\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\000\000\000\000\000\000\000\000\023\000\
    \002\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\000\000\039\000\023\000\000\000\
    \000\000\000\000\025\000\000\000\026\000\023\000\000\000\026\000\
    \026\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
    \026\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\000\000\047\000\000\000\000\000\023\000\040\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\000\000\000\000\023\000\000\000\000\000\
    \000\000\000\000\000\000\023\000\023\000\000\000\026\000\026\000\
    \026\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\000\000\000\000\000\000\000\000\023\000\000\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\025\000\000\000\025\000\
    \000\000\000\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\255\255\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000";
  Lexing.lex_check = 
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\255\255\255\255\000\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\000\
    \000\000\000\000\000\000\000\000\255\255\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\255\255\000\000\000\000\000\000\000\000\008\000\
    \009\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\010\000\255\255\045\000\255\255\000\000\
    \045\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\007\000\000\000\012\000\000\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\007\000\255\255\255\255\255\255\255\255\040\000\255\255\
    \255\255\255\255\255\255\006\000\005\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\255\255\006\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\005\000\025\000\025\000\025\000\
    \025\000\025\000\025\000\025\000\025\000\025\000\025\000\255\255\
    \255\255\255\255\255\255\255\255\023\000\255\255\255\255\023\000\
    \040\000\255\255\006\000\255\255\255\255\023\000\023\000\255\255\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\040\000\255\255\255\255\255\255\255\255\255\255\
    \040\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\255\255\255\255\255\255\255\255\023\000\
    \000\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\024\000\255\255\037\000\024\000\255\255\
    \255\255\255\255\024\000\255\255\024\000\024\000\255\255\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\255\255\045\000\255\255\255\255\024\000\037\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\026\000\255\255\255\255\026\000\255\255\255\255\
    \255\255\255\255\255\255\026\000\026\000\255\255\026\000\026\000\
    \026\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\026\000\
    \026\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
    \026\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
    \026\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
    \026\000\255\255\255\255\255\255\255\255\026\000\255\255\026\000\
    \026\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
    \026\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
    \026\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
    \026\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\036\000\255\255\036\000\
    \255\255\255\255\036\000\036\000\036\000\036\000\036\000\036\000\
    \036\000\036\000\036\000\036\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\037\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255";
  Lexing.lex_base_code = 
   "";
  Lexing.lex_backtrk_code = 
   "";
  Lexing.lex_default_code = 
   "";
  Lexing.lex_trans_code = 
   "";
  Lexing.lex_check_code = 
   "";
  Lexing.lex_code = 
   "";
}

let rec token lexbuf =
    __ocaml_lex_token_rec lexbuf 0
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
let
# 42 "src/rosetteInterface/lexer.mll"
          id
# 257 "src/rosetteInterface/lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 42 "src/rosetteInterface/lexer.mll"
               ( try Hashtbl.find keyword_tbl id with Not_found -> ID id )
# 261 "src/rosetteInterface/lexer.ml"

  | 1 ->
# 43 "src/rosetteInterface/lexer.mll"
                   ( LPAREN )
# 266 "src/rosetteInterface/lexer.ml"

  | 2 ->
# 44 "src/rosetteInterface/lexer.mll"
                   ( RPAREN )
# 271 "src/rosetteInterface/lexer.ml"

  | 3 ->
# 45 "src/rosetteInterface/lexer.mll"
                   ( PLUS )
# 276 "src/rosetteInterface/lexer.ml"

  | 4 ->
# 46 "src/rosetteInterface/lexer.mll"
                   ( STRING (String.concat "" (string lexbuf)) )
# 281 "src/rosetteInterface/lexer.ml"

  | 5 ->
# 47 "src/rosetteInterface/lexer.mll"
                   ( MINUS )
# 286 "src/rosetteInterface/lexer.ml"

  | 6 ->
# 48 "src/rosetteInterface/lexer.mll"
                   ( MUL )
# 291 "src/rosetteInterface/lexer.ml"

  | 7 ->
# 49 "src/rosetteInterface/lexer.mll"
                   ( DIV )
# 296 "src/rosetteInterface/lexer.ml"

  | 8 ->
# 50 "src/rosetteInterface/lexer.mll"
                   ( MOD )
# 301 "src/rosetteInterface/lexer.ml"

  | 9 ->
# 51 "src/rosetteInterface/lexer.mll"
                   ( NOT )
# 306 "src/rosetteInterface/lexer.ml"

  | 10 ->
# 52 "src/rosetteInterface/lexer.mll"
                    ( AND )
# 311 "src/rosetteInterface/lexer.ml"

  | 11 ->
# 53 "src/rosetteInterface/lexer.mll"
                    ( OR )
# 316 "src/rosetteInterface/lexer.ml"

  | 12 ->
# 54 "src/rosetteInterface/lexer.mll"
                   ( EQ )
# 321 "src/rosetteInterface/lexer.ml"

  | 13 ->
# 55 "src/rosetteInterface/lexer.mll"
                   ( NEQ )
# 326 "src/rosetteInterface/lexer.ml"

  | 14 ->
# 56 "src/rosetteInterface/lexer.mll"
                   ( LT )
# 331 "src/rosetteInterface/lexer.ml"

  | 15 ->
# 57 "src/rosetteInterface/lexer.mll"
                   ( LEQ )
# 336 "src/rosetteInterface/lexer.ml"

  | 16 ->
# 58 "src/rosetteInterface/lexer.mll"
                   ( GT )
# 341 "src/rosetteInterface/lexer.ml"

  | 17 ->
# 59 "src/rosetteInterface/lexer.mll"
                   ( GEQ )
# 346 "src/rosetteInterface/lexer.ml"

  | 18 ->
# 60 "src/rosetteInterface/lexer.mll"
                   ( TRUE )
# 351 "src/rosetteInterface/lexer.ml"

  | 19 ->
# 61 "src/rosetteInterface/lexer.mll"
                   ( FALSE )
# 356 "src/rosetteInterface/lexer.ml"

  | 20 ->
let
# 62 "src/rosetteInterface/lexer.mll"
           int
# 362 "src/rosetteInterface/lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 62 "src/rosetteInterface/lexer.mll"
                   ( INT (int_of_string int) )
# 366 "src/rosetteInterface/lexer.ml"

  | 21 ->
let
# 63 "src/rosetteInterface/lexer.mll"
             float
# 372 "src/rosetteInterface/lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 63 "src/rosetteInterface/lexer.mll"
                   ( FLOAT (float_of_string float))
# 376 "src/rosetteInterface/lexer.ml"

  | 22 ->
# 64 "src/rosetteInterface/lexer.mll"
                   ( token lexbuf )
# 381 "src/rosetteInterface/lexer.ml"

  | 23 ->
# 65 "src/rosetteInterface/lexer.mll"
                   ( comment lexbuf )
# 386 "src/rosetteInterface/lexer.ml"

  | 24 ->
# 66 "src/rosetteInterface/lexer.mll"
                   ( EOF )
# 391 "src/rosetteInterface/lexer.ml"

  | 25 ->
# 67 "src/rosetteInterface/lexer.mll"
                   ( raise (LexError ("Unexpected char: "^(Lexing.lexeme lexbuf))) )
# 396 "src/rosetteInterface/lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; 
      __ocaml_lex_token_rec lexbuf __ocaml_lex_state

and string lexbuf =
    __ocaml_lex_string_rec lexbuf 37
and __ocaml_lex_string_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 70 "src/rosetteInterface/lexer.mll"
                     ( "\\" :: (string lexbuf) )
# 408 "src/rosetteInterface/lexer.ml"

  | 1 ->
# 71 "src/rosetteInterface/lexer.mll"
                     ( "\"" :: (string lexbuf) )
# 413 "src/rosetteInterface/lexer.ml"

  | 2 ->
# 72 "src/rosetteInterface/lexer.mll"
                     ( "\n" :: (string lexbuf) )
# 418 "src/rosetteInterface/lexer.ml"

  | 3 ->
# 73 "src/rosetteInterface/lexer.mll"
                     ( "\t" :: (string lexbuf) )
# 423 "src/rosetteInterface/lexer.ml"

  | 4 ->
# 74 "src/rosetteInterface/lexer.mll"
                     ( [] )
# 428 "src/rosetteInterface/lexer.ml"

  | 5 ->
let
# 75 "src/rosetteInterface/lexer.mll"
         c
# 434 "src/rosetteInterface/lexer.ml"
= Lexing.sub_lexeme_char lexbuf lexbuf.Lexing.lex_start_pos in
# 75 "src/rosetteInterface/lexer.mll"
                     ( (String.make 1 c) :: (string lexbuf) )
# 438 "src/rosetteInterface/lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; 
      __ocaml_lex_string_rec lexbuf __ocaml_lex_state

and comment lexbuf =
    __ocaml_lex_comment_rec lexbuf 45
and __ocaml_lex_comment_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 79 "src/rosetteInterface/lexer.mll"
                     ( token lexbuf )
# 450 "src/rosetteInterface/lexer.ml"

  | 1 ->
# 80 "src/rosetteInterface/lexer.mll"
                     ( EOF )
# 455 "src/rosetteInterface/lexer.ml"

  | 2 ->
# 81 "src/rosetteInterface/lexer.mll"
                     ( comment lexbuf )
# 460 "src/rosetteInterface/lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; 
      __ocaml_lex_comment_rec lexbuf __ocaml_lex_state

;;

